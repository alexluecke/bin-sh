#! /bin/bash

DRIVE="Boatload"
DIR_FROM=$HOME
DIR_TO=/media/$USER/$DRIVE/Backups
SYNC_DIRS=()
DOT_FILES=(".ssh" ".password-store" ".vim" ".task" ".fonts" ".gnupg")


if [ -d "$DIR_TO" ]; then
	echo "Backing up..."
else
	echo "Backup drive not mounted"
fi


for DIR in "$@"
do
	if [ -d "$DIR_FROM/$DIR/" ] && [ -d "$DIR_TO/$DIR/" ]
	then
		SYNC_DIRS+=($DIR)
	elif [ "$DIR" == "dots" ]
	then
		SYNC_DIRS+=($DIR)
	fi
done

# Now that we know which dirs exists, sync:
for DIR in ${SYNC_DIRS[@]}
do
	if [ "$DIR" == "dots" ]; then
		printf "\nBackup dot files?\n"
		select yn in "Yes" "No" "Dry"; do
			case $yn in
				Yes )
					mkdir -p $DIR_TO/dots;

					for DOT in ${DOT_FILES[@]}
					do
						printf "\nBacking up $DIR_FROM/$DOT to $DIR_TO/dots/$DOT\n"
						mkdir -p  $DIR_TO/dots/$DOT;
						rsync -aruv --delete --progress \
							$DIR_FROM/$DOT/ $DIR_TO/dots/$DOT/;
					done

					break
					;;
				No ) echo "SKIPPING"; break;;
				Dry )

					# TODO: Refactor this.
					mkdir -p $DIR_TO/dots;

					for DOT in ${DOT_FILES[@]}
					do
						printf "\nBacking up $DIR_FROM/$DOT to $DIR_TO/dots/$DOT\n"
						mkdir -p  $DIR_TO/dots/$DOT;
						rsync --exclude=google-chrome -aruvn --delete --progress \
							$DIR_FROM/$DOT/ $DIR_TO/dots/$DOT/;
					done

					continue
					;;
				* ) break;;
			esac
		done
	elif [ -n "$DIR" ]; then
		printf "\nSync $DIR_FROM/$DIR to $DIR_TO/$DIR?\n"
		select yn in "Yes" "No" "Dry"; do
			case $yn in
				Yes )
					rsync -aruv --delete --progress \
						$DIR_FROM/$DIR/ $DIR_TO/$DIR/;
					break
					;;
				No ) echo "SKIPPING"; break;;
				Dry )
					rsync -aruvn --delete --progress \
						$DIR_FROM/$DIR/ $DIR_TO/$DIR/;
					continue
					;;
				* ) break;;
			esac
		done
	fi
done
